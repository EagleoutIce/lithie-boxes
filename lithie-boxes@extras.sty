\ProvidesPackage{lithie-boxes@extras}[2021/03/21 EagleoutIce - extra features for lithie-boxes]
\def\@libx@decodeenv#1{%
\ifcsname @libx@map@envshort@#1\endcsname
    \csname @libx@map@envshort@#1\endcsname
\else\PackageError{lithie-boxes}{No box-mapping for '#1'}{Maybe the box was not loaded yet?}\fi
}

% starred variant sets both
% #1 derivative to use #2 boxname
\newcommand*\SetBoxPlain{\@ifstar\libx@setboth@boxplain\libx@set@boxplain}
\newcommand*\libx@setboth@boxplain[2][@plain]{\libx@set@boxplain[#1]{#2}\libx@set@boxplain[#1]{#2*}}
\newcommand*\libx@set@boxplain[2][@plain]{\libx@update@boxdata{\@libx@decodeenv{#2}}{StyleDerivative}{#1}}
%
\newcommand*\SetBoxesPlain{\@ifstar\libx@setboth@boxesplain\libx@set@boxesplain}
\newcommand*\libx@setboth@boxesplain[2][@plain]{\forcsvlist{\SetBoxPlain*[#1]}{#2}}
\newcommand*\libx@set@boxesplain[2][@plain]{\forcsvlist{\SetBoxPlain[#1]}{#2}}
%
\newcommand*\SetBoxDisabled{\@ifstar\libx@setboth@boxdisabled\libx@set@boxdisabled}
\newcommand*\libx@setboth@boxdisabled[2][false]{\libx@set@boxdisabled[#1]{#2}\libx@set@boxdisabled[#1]{#2*}}
\newcommand*\libx@set@boxdisabled[2][false]{\libx@update@boxif{\@libx@decodeenv{#2}}{BoxEnabled}{#1}}
%
\newcommand*\SetBoxesDisabled{\@ifstar\libx@setboth@boxesdisabled\libx@set@boxesdisabled}
\newcommand*\libx@setboth@boxesdisabled[2][false]{\forcsvlist{\SetBoxDisabled*[#1]}{#2}}
\newcommand*\libx@set@boxesdisabled[2][false]{\forcsvlist{\SetBoxDisabled[#1]}{#2}}

% maybe with rgb support? ifstar: include 'starred' variant
% #1 box id, #2 new color
\newcommand*\SetBoxColor{\@ifstar\libx@setboth@boxcolor\libx@set@boxcolor}
\def\libx@setboth@boxcolor#1#2{\libx@set@boxcolor{#1}{#2}\libx@set@boxcolor{#1*}{#2}}
\def\libx@set@boxcolor#1#2{\libx@update@boxdata{\@libx@decodeenv{#1}}{BoxColor}{#2}}

% Ref system ref box with given label
% if starred hide title
\DeclareRobustCommand*\boxref{\@ifstar\libx@num@nameref\libx@long@nameref}
\long\def\@libx@num@nameref#1 (#2)#3\@nil{#1}
\def\libx@thirdoffive#1#2#3#4#5{#3}
\def\libx@num@nameref#1{%
% assure nameref:
\libx@namerefprobe{}%
% we directly access the label def
\ifcsname r@#1\endcsname
    \protected@edef\libx@tmp{\csname r@#1\endcsname}%
    \protected@edef\libx@tmp{\expandafter\libx@thirdoffive\libx@tmp\relax\relax\relax\relax\relax}%
    \protected@edef\libx@tmp{\noexpand\@libx@num@nameref\libx@tmp ?? ()\noexpand\@nil}%
    \libx@hyperref[#1]{\libx@tmp}%
\else
    \typeout{Warning boxref-num '#1' not found.}%
\fi}

% allow rename as with normal nameref?
% Note: this is a reimplementation as the behaviour might change
% note without star this is same as boxref (allows better let's)
\DeclareRobustCommand*\boxnameref{\@ifstar\libx@short@nameref\libx@long@nameref}
\def\@libx@short@nameref#1 (#2)#3\@nil{#2}

\def\libx@thirdoffive#1#2#3#4#5{#3}
\def\libx@long@nameref#1{%
% assure nameref:
\libx@namerefprobe{}%
% we directly access the label def
\ifcsname r@#1\endcsname
    \protected@edef\libx@tmp{\csname r@#1\endcsname}%
    \protected@edef\libx@tmp{\expandafter\libx@thirdoffive\libx@tmp\relax\relax\relax\relax\relax}%
    \libx@hyperref[#1]{\libx@tmp}%
\else
    \typeout{Warning boxref-short '#1' not found.}%
\fi}

\def\libx@short@nameref#1{%
% assure nameref:
\libx@namerefprobe{}%
% we directly access the label def
\ifcsname r@#1\endcsname
    \protected@edef\libx@tmp{\csname r@#1\endcsname}%
    \protected@edef\libx@tmp{\expandafter\libx@thirdoffive\libx@tmp\relax\relax\relax\relax\relax}%
    \protected@edef\libx@tmp{\noexpand\@libx@short@nameref\libx@tmp\noexpand\@nil}%
    \libx@hyperref[#1]{\libx@tmp}%
\else
    \typeout{Warning boxref-short '#1' not found.}%
\fi}

% Color Palettes Control
\iflibx@cpalette@
\ifcsname cpl@registered@palettes\endcsname\else
    \PackageError{lithie-boxes}{cpalette requested, but package not loaded}
    {You have to load the 'color-palettes' package yourself if you use the 'cpalette'-Option.}%
\fi % Add to the hook... as error we can do it in main

\let\libx@old@cpl@hooks\cpl@hooks
\def\cpl@hooks{% Add to the hook
    \libx@old@cpl@hooks\libx@cpalette@hook
}

\providecommand\libxdefcolor{paletteA} \providecommand\libxthecolor{paletteC} \providecommand\libxlemcolor{paletteC}
\providecommand\libxsumcolor{paletteD}
\providecommand\libxprocolor{gray} \providecommand\libxremcolor{gray} \providecommand\libxexacolor{gray}

\def\libx@cpalette@hook{%
\libx@setboth@boxcolor\@libx@def@envname\libxdefcolor
\libx@setboth@boxcolor\@libx@the@envname\libxthecolor
\libx@setboth@boxcolor\@libx@lem@envname\libxlemcolor
\libx@setboth@boxcolor\@libx@sum@envname\libxsumcolor
\libx@setboth@boxcolor\@libx@pro@envname\libxprocolor
\libx@setboth@boxcolor\@libx@rem@envname\libxremcolor
\libx@setboth@boxcolor\@libx@exa@envname\libxexacolor}
\fi

% Auto style
\iflibx@autostyle@
\libx@setboth@boxesplain\@libx@rem@envname
\libx@setboth@boxesplain\@libx@exa@envname
\libx@setboth@boxesplain\@libx@lem@envname
\libx@setboth@boxesplain\@libx@pro@envname
\fi

% Further User commands
\let\LoadBoxStyle\libx@LoadBoxStyle
\let\RegisterBox\libx@RegisterBox
\let\RegisterNewDefaultStyle\libx@RegisterNewDefaultStyle
\let\CurrentBoxStyle\libx@currentstyle
\let\RefreshBoxStyle\libx@RefreshBoxStyle
\endinput